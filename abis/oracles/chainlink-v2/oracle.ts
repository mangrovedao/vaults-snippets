export const chainlinkOracleV2ABI = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_baseFeed1",
        type: "tuple",
        internalType: "struct ChainlinkFeed",
        components: [
          { name: "feed", type: "address", internalType: "address" },
          { name: "baseDecimals", type: "uint256", internalType: "uint256" },
          { name: "quoteDecimals", type: "uint256", internalType: "uint256" },
        ],
      },
      {
        name: "_baseFeed2",
        type: "tuple",
        internalType: "struct ChainlinkFeed",
        components: [
          { name: "feed", type: "address", internalType: "address" },
          { name: "baseDecimals", type: "uint256", internalType: "uint256" },
          { name: "quoteDecimals", type: "uint256", internalType: "uint256" },
        ],
      },
      {
        name: "_quoteFeed1",
        type: "tuple",
        internalType: "struct ChainlinkFeed",
        components: [
          { name: "feed", type: "address", internalType: "address" },
          { name: "baseDecimals", type: "uint256", internalType: "uint256" },
          { name: "quoteDecimals", type: "uint256", internalType: "uint256" },
        ],
      },
      {
        name: "_quoteFeed2",
        type: "tuple",
        internalType: "struct ChainlinkFeed",
        components: [
          { name: "feed", type: "address", internalType: "address" },
          { name: "baseDecimals", type: "uint256", internalType: "uint256" },
          { name: "quoteDecimals", type: "uint256", internalType: "uint256" },
        ],
      },
      {
        name: "_baseVault",
        type: "tuple",
        internalType: "struct ERC4626Feed",
        components: [
          { name: "vault", type: "address", internalType: "address" },
          {
            name: "conversionSample",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "_quoteVault",
        type: "tuple",
        internalType: "struct ERC4626Feed",
        components: [
          { name: "vault", type: "address", internalType: "address" },
          {
            name: "conversionSample",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "baseFeed1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract AggregatorV3Interface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseFeed1BaseDecimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseFeed1Decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseFeed1QuoteDecimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseFeed2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract AggregatorV3Interface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseFeed2BaseDecimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseFeed2Decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseFeed2QuoteDecimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseVault",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IERC4626" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseVaultConversionSample",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteFeed1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract AggregatorV3Interface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteFeed1BaseDecimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteFeed1Decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteFeed1QuoteDecimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteFeed2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract AggregatorV3Interface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteFeed2BaseDecimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteFeed2Decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteFeed2QuoteDecimals",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteVault",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IERC4626" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteVaultConversionSample",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tick",
    inputs: [],
    outputs: [{ name: "", type: "int256", internalType: "Tick" }],
    stateMutability: "view",
  },
  { type: "error", name: "OracleInvalidPrice", inputs: [] },
] as const;
